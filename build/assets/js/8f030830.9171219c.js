"use strict";(self.webpackChunkrenerp_docs=self.webpackChunkrenerp_docs||[]).push([[423],{7659:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var s=r(4848),t=r(8453);const i={sidebar_position:3},l="Development Guide",a={id:"development",title:"Development Guide",description:"This guide will help you understand the development workflow and architecture of RENERP.",source:"@site/docs/development.md",sourceDirName:".",slug:"/development",permalink:"/renerp/development",draft:!1,unlisted:!1,editUrl:"https://github.com/DankiCalamari/renerp/tree/main/docs/docs/development.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docs",previous:{title:"Installation Guide",permalink:"/renerp/installation"},next:{title:"Deployment Guide",permalink:"/renerp/deployment"}},o={},c=[{value:"Project Structure",id:"project-structure",level:2},{value:"Development Workflow",id:"development-workflow",level:2},{value:"1. Setting Up Development Environment",id:"1-setting-up-development-environment",level:3},{value:"2. Running Development Servers",id:"2-running-development-servers",level:3},{value:"3. Database Migrations",id:"3-database-migrations",level:3},{value:"Code Style",id:"code-style",level:2},{value:"Backend (Python)",id:"backend-python",level:3},{value:"Frontend (TypeScript)",id:"frontend-typescript",level:3},{value:"Testing",id:"testing",level:2},{value:"Backend Testing",id:"backend-testing",level:3},{value:"Frontend Testing",id:"frontend-testing",level:3},{value:"Git Workflow",id:"git-workflow",level:2},{value:"Documentation",id:"documentation",level:2},{value:"Getting Help",id:"getting-help",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"development-guide",children:"Development Guide"}),"\n",(0,s.jsx)(n.p,{children:"This guide will help you understand the development workflow and architecture of RENERP."}),"\n",(0,s.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"renerp/\r\n\u251c\u2500\u2500 frontend/          # React frontend application\r\n\u2502   \u251c\u2500\u2500 src/          # Source code\r\n\u2502   \u251c\u2500\u2500 public/       # Static assets\r\n\u2502   \u2514\u2500\u2500 package.json  # Frontend dependencies\r\n\u251c\u2500\u2500 backend/          # FastAPI backend application\r\n\u2502   \u251c\u2500\u2500 app/         # Application code\r\n\u2502   \u251c\u2500\u2500 tests/       # Test files\r\n\u2502   \u2514\u2500\u2500 alembic/     # Database migrations\r\n\u251c\u2500\u2500 docs/            # Documentation website\r\n\u2514\u2500\u2500 docker-compose.yml # Container orchestration\n"})}),"\n",(0,s.jsx)(n.h2,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,s.jsx)(n.h3,{id:"1-setting-up-development-environment",children:"1. Setting Up Development Environment"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Clone the repository and install dependencies:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/DankiCalamari/renerp.git\r\ncd renerp\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Set up the backend:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd backend\r\npython -m venv venv\r\nsource venv/bin/activate  # or .\\venv\\Scripts\\activate on Windows\r\npip install -r requirements.txt\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Set up the frontend:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd frontend\r\nnpm install\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-running-development-servers",children:"2. Running Development Servers"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Start the backend server:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd backend\r\nuvicorn app.main:app --reload --port 8000\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Start the frontend development server:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd frontend\r\nnpm start\n"})}),"\n",(0,s.jsx)(n.p,{children:"The development servers will be available at:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Frontend: ",(0,s.jsx)(n.a,{href:"http://localhost:3000",children:"http://localhost:3000"})]}),"\n",(0,s.jsxs)(n.li,{children:["Backend API: ",(0,s.jsx)(n.a,{href:"http://localhost:8000",children:"http://localhost:8000"})]}),"\n",(0,s.jsxs)(n.li,{children:["API Documentation: ",(0,s.jsx)(n.a,{href:"http://localhost:8000/docs",children:"http://localhost:8000/docs"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"3-database-migrations",children:"3. Database Migrations"}),"\n",(0,s.jsx)(n.p,{children:"When making changes to the database models:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Create a new migration:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'cd backend\r\nalembic revision --autogenerate -m "Description of changes"\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Apply the migration:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"alembic upgrade head\n"})}),"\n",(0,s.jsx)(n.h2,{id:"code-style",children:"Code Style"}),"\n",(0,s.jsx)(n.h3,{id:"backend-python",children:"Backend (Python)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Follow PEP 8 style guide"}),"\n",(0,s.jsx)(n.li,{children:"Use type hints"}),"\n",(0,s.jsx)(n.li,{children:"Write docstrings for functions and classes"}),"\n",(0,s.jsx)(n.li,{children:"Use meaningful variable names"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from typing import List, Optional\r\nfrom pydantic import BaseModel\r\n\r\nclass User(BaseModel):\r\n    id: int\r\n    username: str\r\n    email: str\r\n    is_active: bool = True\r\n\r\ndef get_user_by_id(user_id: int) -> Optional[User]:\r\n    """\r\n    Retrieve a user by their ID.\r\n    \r\n    Args:\r\n        user_id: The ID of the user to retrieve\r\n        \r\n    Returns:\r\n        Optional[User]: The user if found, None otherwise\r\n    """\r\n    # Implementation\n'})}),"\n",(0,s.jsx)(n.h3,{id:"frontend-typescript",children:"Frontend (TypeScript)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use TypeScript for type safety"}),"\n",(0,s.jsx)(n.li,{children:"Follow ESLint rules"}),"\n",(0,s.jsx)(n.li,{children:"Use functional components with hooks"}),"\n",(0,s.jsx)(n.li,{children:"Implement proper error handling"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import React, { useState, useEffect } from 'react';\r\nimport { User } from '../types';\r\n\r\ninterface UserListProps {\r\n  onSelectUser: (user: User) => void;\r\n}\r\n\r\nexport const UserList: React.FC<UserListProps> = ({ onSelectUser }) => {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await fetch('/api/users');\r\n        const data = await response.json();\r\n        setUsers(data);\r\n      } catch (err) {\r\n        setError('Failed to fetch users');\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      <ul>\r\n        {users.map(user => (\r\n          <li key={user.id} onClick={() => onSelectUser(user)}>\r\n            {user.username}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,s.jsx)(n.h3,{id:"backend-testing",children:"Backend Testing"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Run unit tests:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd backend\r\npytest\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Run with coverage:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pytest --cov=app tests/\n"})}),"\n",(0,s.jsx)(n.h3,{id:"frontend-testing",children:"Frontend Testing"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Run unit tests:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd frontend\r\nnpm test\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Run with coverage:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm test -- --coverage\n"})}),"\n",(0,s.jsx)(n.h2,{id:"git-workflow",children:"Git Workflow"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Create a feature branch:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git checkout -b feature/your-feature-name\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Make changes and commit:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'git add .\r\ngit commit -m "feat: add new feature"\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Push changes:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git push origin feature/your-feature-name\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:"Create a Pull Request on GitHub"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Update relevant documentation when making changes"}),"\n",(0,s.jsx)(n.li,{children:"Add comments for complex logic"}),"\n",(0,s.jsx)(n.li,{children:"Keep API documentation up to date"}),"\n",(0,s.jsx)(n.li,{children:"Update README.md if needed"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Check the ",(0,s.jsx)(n.a,{href:"/troubleshooting",children:"Troubleshooting Guide"})]}),"\n",(0,s.jsxs)(n.li,{children:["Review ",(0,s.jsx)(n.a,{href:"https://github.com/DankiCalamari/renerp/issues",children:"GitHub Issues"})]}),"\n",(0,s.jsxs)(n.li,{children:["Ask questions in the ",(0,s.jsx)(n.a,{href:"https://discord.gg/renerp",children:"Community Discord"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>a});var s=r(6540);const t={},i=s.createContext(t);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkrenerp_docs=self.webpackChunkrenerp_docs||[]).push([[459],{6564:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var t=r(4848),s=r(8453);const i={sidebar_position:6},l="Contributing Guide",o={id:"contributing",title:"Contributing Guide",description:"Thank you for your interest in contributing to RENERP! This guide will help you get started with contributing to the project.",source:"@site/docs/contributing.md",sourceDirName:".",slug:"/contributing",permalink:"/renerp/contributing",draft:!1,unlisted:!1,editUrl:"https://github.com/DankiCalamari/renerp/tree/main/docs/docs/contributing.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"docs",previous:{title:"Troubleshooting Guide",permalink:"/renerp/troubleshooting"},next:{title:"Inventory Management",permalink:"/renerp/features/inventory"}},c={},d=[{value:"Getting Started",id:"getting-started",level:2},{value:"1. Fork the Repository",id:"1-fork-the-repository",level:3},{value:"2. Set Up Development Environment",id:"2-set-up-development-environment",level:3},{value:"Development Workflow",id:"development-workflow",level:2},{value:"1. Create a Feature Branch",id:"1-create-a-feature-branch",level:3},{value:"2. Make Changes",id:"2-make-changes",level:3},{value:"3. Commit Changes",id:"3-commit-changes",level:3},{value:"4. Push Changes",id:"4-push-changes",level:3},{value:"5. Create a Pull Request",id:"5-create-a-pull-request",level:3},{value:"Code Style",id:"code-style",level:2},{value:"Frontend",id:"frontend",level:3},{value:"Backend",id:"backend",level:3},{value:"Testing",id:"testing",level:2},{value:"Frontend Testing",id:"frontend-testing",level:3},{value:"Backend Testing",id:"backend-testing",level:3},{value:"Documentation",id:"documentation",level:2},{value:"Review Process",id:"review-process",level:2},{value:"Getting Help",id:"getting-help",level:2},{value:"Code of Conduct",id:"code-of-conduct",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"contributing-guide",children:"Contributing Guide"}),"\n",(0,t.jsx)(n.p,{children:"Thank you for your interest in contributing to RENERP! This guide will help you get started with contributing to the project."}),"\n",(0,t.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsx)(n.h3,{id:"1-fork-the-repository",children:"1. Fork the Repository"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Visit ",(0,t.jsx)(n.a,{href:"https://github.com/DankiCalamari/renerp",children:"RENERP on GitHub"})]}),"\n",(0,t.jsx)(n.li,{children:'Click the "Fork" button in the top-right corner'}),"\n",(0,t.jsxs)(n.li,{children:["Clone your fork:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/YOUR_USERNAME/renerp.git\r\ncd renerp\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-set-up-development-environment",children:"2. Set Up Development Environment"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Install dependencies:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Backend\r\ncd backend\r\npython -m venv venv\r\nsource venv/bin/activate  # or .\\venv\\Scripts\\activate on Windows\r\npip install -r requirements.txt\r\n\r\n# Frontend\r\ncd frontend\r\nnpm install\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Set up environment variables:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Backend\r\ncp backend/.env.example backend/.env\r\n\r\n# Frontend\r\ncp frontend/.env.example frontend/.env\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Start development servers:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Backend\r\ncd backend\r\nuvicorn app.main:app --reload --port 8000\r\n\r\n# Frontend\r\ncd frontend\r\nnpm start\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,t.jsx)(n.h3,{id:"1-create-a-feature-branch",children:"1. Create a Feature Branch"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git checkout -b feature/your-feature-name\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-make-changes",children:"2. Make Changes"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Write your code"}),"\n",(0,t.jsx)(n.li,{children:"Add tests"}),"\n",(0,t.jsx)(n.li,{children:"Update documentation"}),"\n",(0,t.jsx)(n.li,{children:"Follow code style guidelines"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-commit-changes",children:"3. Commit Changes"}),"\n",(0,t.jsxs)(n.p,{children:["Follow the ",(0,t.jsx)(n.a,{href:"https://www.conventionalcommits.org/",children:"Conventional Commits"})," specification:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Format\r\n<type>(<scope>): <description>\r\n\r\n# Examples\r\ngit commit -m "feat(auth): add JWT authentication"\r\ngit commit -m "fix(api): resolve CORS issues"\r\ngit commit -m "docs(readme): update installation instructions"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"4-push-changes",children:"4. Push Changes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git push origin feature/your-feature-name\n"})}),"\n",(0,t.jsx)(n.h3,{id:"5-create-a-pull-request",children:"5. Create a Pull Request"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Visit your fork on GitHub"}),"\n",(0,t.jsx)(n.li,{children:'Click "Compare & pull request"'}),"\n",(0,t.jsx)(n.li,{children:"Fill in the PR template"}),"\n",(0,t.jsx)(n.li,{children:"Request reviews from maintainers"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"code-style",children:"Code Style"}),"\n",(0,t.jsx)(n.h3,{id:"frontend",children:"Frontend"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Use TypeScript for type safety"}),"\n",(0,t.jsx)(n.li,{children:"Follow ESLint rules"}),"\n",(0,t.jsx)(n.li,{children:"Use functional components with hooks"}),"\n",(0,t.jsx)(n.li,{children:"Implement proper error handling"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import React, { useState, useEffect } from 'react';\r\nimport { User } from '../types';\r\n\r\ninterface UserListProps {\r\n  onSelectUser: (user: User) => void;\r\n}\r\n\r\nexport const UserList: React.FC<UserListProps> = ({ onSelectUser }) => {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await fetch('/api/users');\r\n        const data = await response.json();\r\n        setUsers(data);\r\n      } catch (err) {\r\n        setError('Failed to fetch users');\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      <ul>\r\n        {users.map(user => (\r\n          <li key={user.id} onClick={() => onSelectUser(user)}>\r\n            {user.username}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"backend",children:"Backend"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Follow PEP 8 style guide"}),"\n",(0,t.jsx)(n.li,{children:"Use type hints"}),"\n",(0,t.jsx)(n.li,{children:"Write docstrings for functions and classes"}),"\n",(0,t.jsx)(n.li,{children:"Use meaningful variable names"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from typing import List, Optional\r\nfrom pydantic import BaseModel\r\n\r\nclass User(BaseModel):\r\n    id: int\r\n    username: str\r\n    email: str\r\n    is_active: bool = True\r\n\r\ndef get_user_by_id(user_id: int) -> Optional[User]:\r\n    """\r\n    Retrieve a user by their ID.\r\n    \r\n    Args:\r\n        user_id: The ID of the user to retrieve\r\n        \r\n    Returns:\r\n        Optional[User]: The user if found, None otherwise\r\n    """\r\n    # Implementation\n'})}),"\n",(0,t.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,t.jsx)(n.h3,{id:"frontend-testing",children:"Frontend Testing"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Write unit tests:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { render, screen } from '@testing-library/react';\r\nimport { UserList } from './UserList';\r\n\r\ndescribe('UserList', () => {\r\n  it('renders user list', () => {\r\n    const mockUsers = [\r\n      { id: 1, username: 'test1' },\r\n      { id: 2, username: 'test2' }\r\n    ];\r\n    \r\n    render(<UserList users={mockUsers} onSelectUser={() => {}} />);\r\n    \r\n    expect(screen.getByText('test1')).toBeInTheDocument();\r\n    expect(screen.getByText('test2')).toBeInTheDocument();\r\n  });\r\n});\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Run tests:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd frontend\r\nnpm test\n"})}),"\n",(0,t.jsx)(n.h3,{id:"backend-testing",children:"Backend Testing"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Write unit tests:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import pytest\r\nfrom app.services import user_service\r\n\r\ndef test_get_user_by_id():\r\n    user = user_service.get_user_by_id(1)\r\n    assert user is not None\r\n    assert user.id == 1\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Run tests:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd backend\r\npytest\n"})}),"\n",(0,t.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Update relevant documentation"}),"\n",(0,t.jsx)(n.li,{children:"Add comments for complex logic"}),"\n",(0,t.jsx)(n.li,{children:"Keep API documentation up to date"}),"\n",(0,t.jsx)(n.li,{children:"Update README.md if needed"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"review-process",children:"Review Process"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Ensure all tests pass"}),"\n",(0,t.jsx)(n.li,{children:"Update documentation"}),"\n",(0,t.jsx)(n.li,{children:"Address review comments"}),"\n",(0,t.jsx)(n.li,{children:"Squash commits if needed"}),"\n",(0,t.jsx)(n.li,{children:"Merge after approval"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Check the ",(0,t.jsx)(n.a,{href:"/development",children:"Development Guide"})]}),"\n",(0,t.jsxs)(n.li,{children:["Review the ",(0,t.jsx)(n.a,{href:"/troubleshooting",children:"Troubleshooting Guide"})]}),"\n",(0,t.jsxs)(n.li,{children:["Ask questions in the ",(0,t.jsx)(n.a,{href:"https://discord.gg/renerp",children:"Community Discord"})]}),"\n",(0,t.jsxs)(n.li,{children:["Create an issue on ",(0,t.jsx)(n.a,{href:"https://github.com/DankiCalamari/renerp/issues",children:"GitHub"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"code-of-conduct",children:"Code of Conduct"}),"\n",(0,t.jsxs)(n.p,{children:["Please read and follow our ",(0,t.jsx)(n.a,{href:"/CODE_OF_CONDUCT",children:"Code of Conduct"})," to help maintain a positive and inclusive community."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>o});var t=r(6540);const s={},i=t.createContext(s);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);